[tox]
skipsdist = True
envlist = linting, py{36,37,38,39,310}, migrations
skip_missing_interpreters = true

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39, migrations
    3.10: py310

[testenv:linting]
basepython = python3
deps = pre-commit
commands = pre-commit run --all-files --show-diff-on-failure

[testenv]
skip_install = true
deps = -r {toxinidir}/requirements/test.txt
commands =
    py.test {posargs}
setenv =
    PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:}
    PYTHONPATH = ./storage_service
    DJANGO_SETTINGS_MODULE = storage_service.settings.test
    DJANGO_SECRET_KEY = 1234
    BOTO_CONFIG = /dev/null

[testenv:migrations]
basepython = python3
deps = -r {toxinidir}/requirements/test.txt
commands = django-admin makemigrations --check --dry-run

[testenv:py36,py37]
allowlist_externals =
    rm
    git
deps =
commands =
    rm {toxinidir}/requirements/base.txt
    rm {toxinidir}/requirements/local.txt
    rm {toxinidir}/requirements/production.txt
    rm {toxinidir}/requirements/test.txt
    python3 -m pip install --upgrade pip-tools
    pip-compile --quiet --allow-unsafe --output-file {toxinidir}/requirements/base.txt {toxinidir}/requirements/base.in
    pip-compile --quiet --allow-unsafe --output-file {toxinidir}/requirements/local.txt {toxinidir}/requirements/local.in
    pip-compile --quiet --allow-unsafe --output-file {toxinidir}/requirements/production.txt {toxinidir}/requirements/production.in
    pip-compile --quiet --allow-unsafe --output-file {toxinidir}/requirements/test.txt {toxinidir}/requirements/test.in
    python3 -m pip install -r {toxinidir}/requirements/test.txt
    git checkout {toxinidir}/requirements/*.txt
    {[testenv]commands}

[flake8]
exclude = .tox, .git, __pycache__, .cache, build, dist, *.pyc, *.egg-info, .eggs
application-import-names = flake8
select = C, E, F, W, B, B950
ignore = E203, E402, E501, W503
max-line-length = 80
